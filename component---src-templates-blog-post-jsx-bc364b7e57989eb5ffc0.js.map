{"version":3,"sources":["webpack:///./config.js","webpack:///./src/components/PostContainer.jsx","webpack:///./src/components/PostHeader.jsx","webpack:///./src/components/PreOrNext.jsx","webpack:///./src/css/github.markdown.css?0b33","webpack:///./src/layouts/PostLayout.jsx","webpack:///./src/templates/BlogPost.jsx"],"names":["config","author","title","description","repo","repoDir","branch","port","repoName","repoPath","substring","lastIndexOf","module","exports","PostContainer","props","state","render","html","__html","Component","dislayName","propTypes","PropTypes","string","isRequired","defaultProps","PostHander","styles","header","textAlign","fontSize","theme","button","margin","spacing","unit","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","PreOrNext","next","pre","disabled","href","displayname","bool","classes","object","mainStyles","bgc","backgroundColor","footerBgc","PostLayout","children","span","offset","dispalyName","BlogPost","data","pageContext","post","markdownRemark","frontmatter","excerpt","tags","join","display","justifyContent","padding","query"],"mappings":"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","file":"component---src-templates-blog-post-jsx-bc364b7e57989eb5ffc0.js","sourcesContent":["const config = {\n  author: '付达意',\n  title: '付达意的博客',\n  description: '付达意的博客',\n  repo: 'https://github.com/yidafu/blog-post.git',\n  repoDir: './blog-post/',\n  branch: 'master',\n  port: 8080,\n  repoName: '',\n  get repoPath(){\n    return this.repoDir + this.repoName\n\n  }\n}\n\nlet {repo} = config\nconfig.repoName = repo.substring(repo.lastIndexOf('/')+1, repo.lastIndexOf('.git'))\n\nmodule.exports =  config","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/github.markdown.css'\n\nexport default class PostContainer extends Component {\n  static dislayName = 'templates'\n\n  static propTypes = {\n    html: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {}\n\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n  render() {\n    let { html } = this.props\n    return (\n      <article className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: html }}  >\n      </article>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class PostHander extends Component {\n  static dislayName = 'post-header'\n\n  static propTypes = {\n    title: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    title: '无题'\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n  render() {\n    const {title} = this.props\n    return (\n      <h1 style={styles.header}>{title}</h1>\n    )\n  }\n}\n\nconst styles = {\n  header: {\n    textAlign: 'center',\n    fontSize: '40px'\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport {Button} from 'react-bootstrap'\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n})\n\n\nclass PreOrNext extends Component {\n  static displayname = 'PreOrNext'\n  static propTypes = {\n    next: PropTypes.bool,\n    pre: PropTypes.bool,\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    href: PropTypes.string.isRequired\n  }\n  static defaultProps = {\n    disabled: false,\n    href: '#'\n  }\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    const { next, pre, disabled, href} = this.props\n    return (\n      <Button \n        variant=\"contained\" \n        color=\"default\"\n        disabled={disabled}\n      >\n        {/* FIXME 这里涉及相对路径和绝对路径问题 */}\n        <Link to={href}>\n          {pre && '<PRE'}\n          {next && 'NEXT>'}\n        </Link>\n      </Button> \n    )\n  }\n}\n\nexport default PreOrNext","// extracted by mini-css-extract-plugin","import React, { Component, Fragment } from 'react'\nimport { Container, Row, Col} from 'react-bootstrap'\n\nimport NavBar from '@/components/NavBar'\nimport LeftSide from '@/components/LeftSide'\nimport FooterContent from '@/components/FooterContent'\n\nconst mainStyles = {\n  bgc: {\n    backgroundColor: '#e5e5e5'\n  },\n  footerBgc: '',\n}\n\nexport default class PostLayout extends Component {\n  static dispalyName = 'PostLayout'\n  static propTypes = {\n  }\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    const { children  } = this.props\n    \n    return (\n      <Fragment>\n        <NavBar />\n\n        <Container> \n\n          <Row>\n            <Col lg={{span: 8, offset: 2}}>\n              {children}\n            </Col>\n          </Row>\n\n        </Container>\n        <FooterContent style={mainStyles.footerBgc} />\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { Row } from 'react-bootstrap'\nimport PostLayout from '../layouts/PostLayout'\nimport PostHeader from '../components/PostHeader'\nimport PostContainer from '../components/PostContainer'\nimport PreOrNext from '../components/PreOrNext'\nimport { Helmet } from 'react-helmet'\nimport {author} from '../../config'\nclass BlogPost extends Component {\n  static displayname = 'BlogPost'\n  static propTypes = { \n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.object.isRequired\n  }\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    const {data, pageContext } = this.props\n    const { pre, next } = pageContext\n    const post = data.markdownRemark\n    \n    return (\n      <PostLayout>\n        <Helmet>\n          <title>{post.frontmatter.title}</title>\n          <mete name=\"author\" content={author} />\n          <meta name=\"description\" content={post.excerpt} />\n          <meta name=\"keywords\" content={post.frontmatter.tags.join(',')}></meta>\n        </Helmet>\n        <PostHeader\n          title={post.frontmatter.title}\n        />\n        <PostContainer\n          html={post.html}\n        />\n        <div style={{display: 'flex', justifyContent: 'space-between', padding: 10}}>\n          <PreOrNext disabled={pre == ''} pre href={pre} />\n          <PreOrNext disabled={next == ''} next href={next} />\n        </div>\n      </PostLayout>\n      \n    )\n  }\n}\n\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title,\n        tags\n      }\n      excerpt\n    }\n  }\n`\n\nexport default BlogPost"],"sourceRoot":""}