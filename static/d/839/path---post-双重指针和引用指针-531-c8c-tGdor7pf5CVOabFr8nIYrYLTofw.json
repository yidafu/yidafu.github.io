{"data":{"markdownRemark":{"html":"<p> C++双重指针和引用指针</p>\n<h1>引言</h1>\n<p>最近写数据结构遇到了一个有趣问题的问题。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-c line-numbers\"><code class=\"language-c\">class Tree<span class=\"token punctuation\">{</span>\nprivate<span class=\"token punctuation\">:</span>\n    Node<span class=\"token operator\">*</span> root<span class=\"token punctuation\">;</span>\npublic<span class=\"token punctuation\">:</span>\n    <span class=\"token function\">Tree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span> Node <span class=\"token operator\">&amp;</span>TNode <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nTree<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">Tree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    this<span class=\"token operator\">-></span>root <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> Tree<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span> Node <span class=\"token operator\">&amp;</span>TNode <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 略</span>\n    this<span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span> TNode<span class=\"token operator\">-></span>childNode <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    this<span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span> TNode<span class=\"token operator\">-></span>nextSiling <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Tree test<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 为了简便起见</span>\n    test<span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span> this<span class=\"token operator\">-></span>root <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>这样写在函数里建树成功了，但是，一返回main()函数所得的树就消失了。在 Stackoverflow 上找到了一个回答里面的文章很好的解释了这个问题。</p>\n<h1>Google 玩家作弊中</h1>\n<p>这里\nTo Be Continue</p>","frontmatter":{"title":"C++双重指针和引用指针","tags":["cpp","language-feature"]},"excerpt":" C++双重指针和引用指针 引言 最近写数据结构遇到了一个有趣问题的问题。 这样写在函数里建树成功了，但是，一返回main()函数所得的树就消失了。在 Stackoverflow 上找到了一个回答里面的文章很好的解释了这个问题。 Google 玩家作弊中 这里\nTo Be…"}},"pageContext":{"slug":"/post/双重指针和引用指针","pre":"/post/二叉树的中序非递归遍历","next":"/post/如何理解递归","tags":["wabpack","eslint","javascript","axios","api","react","babel","linix","app","algorihm","git","gogs","nginx","proxy","ruby","language","php","shell","cpp","language-feature","c","recursion","java","jsp","mysql","atom","markdown","nodejs","error"]}}