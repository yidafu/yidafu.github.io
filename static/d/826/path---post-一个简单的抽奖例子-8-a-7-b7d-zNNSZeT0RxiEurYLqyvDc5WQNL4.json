{"data":{"markdownRemark":{"html":"<h1>一个简单的抽奖例子</h1>\n<p>社团做活动需要一个抽奖的页面，偷懒做了一个简陋版的抽奖页面，太丑了就不放 Github 地址了。</p>\n<p>抽奖本质上就是一个<code class=\"language-text\">Random()</code>函数的时候，原理上还是不难的。为了方便，先将问题抽象一下。</p>\n<h2>问题抽象</h2>\n<p>先假设有七个人，已经通过数据库查询，或者 API 获得了样例数据：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaohong\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaohuang\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaolan\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaolv\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaoqing\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaocheng\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xiaozi\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>规则是：一等奖一个，二等奖两个，三等奖三个。</p>\n<h2>解决思路</h2>\n<h3>指定范围的随机数</h3>\n<p>JS 里面<code class=\"language-text\">Math.random()</code>返回的是一个<code class=\"language-text\">[0.1)</code>之间的随机数。</p>\n<p>由此，这里给一种获得指定区间的随机数的方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * 这里假设 min max 都是 Int ，且 min &lt; max\n * @param  {number} min 返回的最小值\n * @param  {number} max 返回的最大值\n * @return {number}     获得制定范围的随机数，且 [min ,max） ,根据需求预处理为 Int\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">godGiveYouLucky</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>更多参见：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/random\">Math.random()--MDN</a></p>\n<h3>谁是 LuckyDogs</h3>\n<p>在上面的基础上，想要实现抽取一等奖就已经很容易了。写一个函数，调用上面的成随机函数，由此获得一个中奖者。那二等，三等奖呢？重复调用两次，三次调用中奖函数，代码重复难免过多，写个<code class=\"language-text\">for</code>循环，但是每次都要写，也很麻烦。出于层次化和封装的考虑，设计两个函数，一个实现从给定的数组里面抽出一个中奖者，另一个就是封装一个<code class=\"language-text\">for</code>循环。</p>\n<h4>你是 LuckyDog</h4>\n<p>简单想法就是：通过<code class=\"language-text\">Random()</code>得到一个随机数，这个随机数就是作为抽奖者数组的下标，再根据下标把相应元素取出来，放到一个结果集中，最后把抽奖者数组中的那个元素赋值为<code class=\"language-text\">undefined</code>，以做标记。这要就得到一个幸运儿。</p>\n<p>具体实现时，这里采用一个递归。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> luckyNum <span class=\"token operator\">=</span> <span class=\"token function\">godGiveYouLucky</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> luckyDog <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>luckyNum<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> luckyDog <span class=\"token operator\">==</span> undefined <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n    arr<span class=\"token punctuation\">[</span>luckyNum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> undefined\n    <span class=\"token keyword\">return</span> luckyDog\n\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>这里有一个小问题就是如果你传入的数组全是<code class=\"language-text\">undefined</code>,这个函数就会掉入无限递归调用。由此我们需要添加一个判断条件：当传入的数组不为空的时候，才继续执行，否则返回一个<code class=\"language-text\">false</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">=></span> val <span class=\"token operator\">==</span> undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token comment\">// 同上</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>你们是 LuckyDogs</h4>\n<p>抽出多个中奖者就很容易了。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">youAraluckyDogs</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span>src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> reciver <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        reciver<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> reciver\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>使用实例</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token function\">youAraluckyDogs</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaozi'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaolv'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaocheng'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaoqing'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaolan'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'xiaohuang'</span><span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxxxxxx'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>总结</h2>\n<p>基于 JS 自带的随机函数实现一个抽奖，难度不是很大。稍微有点难度在二次或多次抽取中奖者时，可能会出现的重复中奖的问题，对此采取了简化策略，一旦中奖就剔除抽奖队伍，放入中奖者队伍，原位置置空，问题就要就变成了判断某个索引是否为空，是的，再次递归调用该函数。</p>\n<h2>完整代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaohong\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaohuang\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaolan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaolv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaoqing\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaocheng\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xiaozi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"xxxxxxxxxxx\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">godGiveYouLucky</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> to<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span> val <span class=\"token operator\">=></span> val <span class=\"token operator\">==</span> undefined <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n\n    <span class=\"token keyword\">let</span> luckyNum <span class=\"token operator\">=</span> <span class=\"token function\">godGiveYouLucky</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> luckyDog <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span> luckyNum <span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> luckyDog <span class=\"token operator\">==</span> undefined <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n\n    arr<span class=\"token punctuation\">[</span> luckyNum <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> undefined\n\n    <span class=\"token keyword\">return</span> luckyDog\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">youAraluckyDogs</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span>src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> reciver <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        reciver<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">youAraluckyDog</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> reciver\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token function\">youAraluckyDogs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"webpack配置Reack环境","tags":["JavaScript","algorihm"]},"excerpt":"一个简单的抽奖例子 社团做活动需要一个抽奖的页面，偷懒做了一个简陋版的抽奖页面，太丑了就不放 Github 地址了。 抽奖本质上就是一个 函数的时候，原理上还是不难的。为了方便，先将问题抽象一下。 问题抽象 先假设有七个人，已经通过数据库查询，或者 API…"}},"pageContext":{"slug":"/post/一个简单的抽奖例子","pre":"/post/webpack配置Reack环境","next":"/post/software-must-install","tags":["wabpack","eslint","javascript","axios","api","react","babel","algorihm","linix","app","git","gogs","nginx","proxy","ruby","language","php","shell","cpp","language-feature","c","recursion","java","jsp","mysql","atom","markdown","nodejs","error"]}}