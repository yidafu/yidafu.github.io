{"data":{"markdownRemark":{"html":"<h2>汤头</h2>\n<p>遇到一个问题:要把一个 git 库的 commit 重新拆分. 由于 git 的 commit 历史是不可以修改的.所以,可行方案只有 checkout 每个 commit 到一个单独的文件夹再做拆分.</p>\n<!--more-->\n<h2>解决方案</h2>\n<p>本来打算采用最简(fei)单(shi)方法, 手动操作(反正也就十几二十个 commit).</p>\n<p>在导师的建议下尝试用 PHP 写一个脚本来批量完成这个任务.</p>\n<h2>菜!菜!!</h2>\n<pre><code class=\"language-php\">#!/usr/bin/php\n\n&#x3C;?php\n$log  = [];\n$state;\n/*\n进入工作目录\n*/\nexec(\"cd ~/[path/to/git-repo] &#x26;&#x26; git log\", $log, $state);\n\n$id = 0; /*编号*/\n/*\n@NOTE 小坑：linux换行必须使用**双引号**包裹字符串\n*/\nforeach ($log as $log_item) {\n    if ( preg_match(\"/^commit /\", $log_item ) ) {\n        $commit_id = substr($log_item, 6 );\n        print(\"checkout ... \" . $commit_id .\"\\n\");\n        $msg = [];\n        ++ $id;\n        /*\n        拼装命令\n        */\n        exec('cd ~/[path/to/git-repo] '\n                . ' &#x26;&#x26; git reset --hard '\n                . $commit_id\n                . '&#x26;&#x26; cd ../ &#x26;&#x26; cp -rf ./[git-repo] ./checkout-'\n                . $id . '-' . substr( $commit_id , 1, 6)\n            , $msg );\n        print_r(\"[info]:\" . $msg[0] . \"\\n\");\n    }\n}\n/*\n重置到最新的分支\n*/\nexec( 'cd ~/[path/to/git-repo] &#x26;&#x26; git reset --hard ' . substr($log[0], 6) );\necho \"[info]: 重置回默认版本号 \\n\";\necho \"over! and enjoy!! \\n\";\n ?>\n</code></pre>","frontmatter":{"title":"PHP命令行脚本"}}},"pageContext":{"slug":"/post/PHP命令行脚本","pre":"/post/why-dont-choice-ruby","next":"/post/C模拟实现类","tags":["wabpack","eslint","javascript","axios","api","react","babel","linix","app","algorihm","git","gogs","nginx","proxy","ruby","language","php","shell","cpp","language-feature","c","recursion","java","jsp","mysql","atom","markdown","nodejs","error"]}}