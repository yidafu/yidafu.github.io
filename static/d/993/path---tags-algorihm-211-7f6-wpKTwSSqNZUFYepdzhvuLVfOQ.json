{"pageContext":{"group":[{"node":{"id":"d46a9d98-650b-5668-95dc-5a19c9972357","frontmatter":{"title":"webpack配置Reack环境","tags":["javascript","algorihm"],"date":"2018-05-19"},"fields":{"slug":"/post/一个简单的抽奖例子","category":"JavaScript"},"excerpt":"一个简单的抽奖例子 社团做活动需要一个抽奖的页面，偷懒做了一个简陋版的抽奖页面，太丑了就不放 Github 地址了。 抽奖本质上就是一个 函数的时候，原理上还是不难的。为了方便，先将问题抽象一下。 问题抽象 先假设有七个人，已经通过数据库查询，或者 API…"},"next":{"fields":{"slug":"/post/基于gogs的自主git服务"}},"previous":{"fields":{"slug":"/post/software-must-install"}}},{"node":{"id":"0aea3859-8e84-58e2-aa5d-25eb03a3ffdd","frontmatter":{"title":"C模拟实现类","tags":["cpp","algorihm"],"date":"2017-11-18"},"fields":{"slug":"/post/C模拟实现类","category":"CAndC++"},"excerpt":"由头 之前在《深入理解PHP内核》一书中看到了用函数作为结构体的属性，想到用　C　语言来模拟实现面对对象。 具体实现 解释 ＂方法＂ 主要的一个知识点就是 C…"},"next":{"fields":{"slug":"/post/双重指针和引用指针"}},"previous":{"fields":{"slug":"/post/PHP命令行脚本"}}},{"node":{"id":"f6596733-07b6-523e-ac97-4d6c2b4d2a9c","frontmatter":{"title":"二叉树的中序非递归遍历","tags":["cpp","algorihm"],"date":"2017-11-17"},"fields":{"slug":"/post/二叉树的中序非递归遍历","category":"CAndC++"},"excerpt":"前话 写孩子-兄弟法表示森林，遇到了用非递归实现中序遍历。先没有参考教材上给的伪 C…"},"next":{"fields":{"slug":"/post/如何理解递归"}},"previous":{"fields":{"slug":"/post/双重指针和引用指针"}}},{"node":{"id":"3bde300f-8ef7-5922-9fd2-c1788ffb8c14","frontmatter":{"title":"如何理解递归","tags":["c","algorihm","recursion"],"date":"2017-10-21"},"fields":{"slug":"/post/如何理解递归","category":"CAndC++"},"excerpt":"前话 初学 Clang ，就接触过递归（那个要死人的汉诺塔）。但是一直不理解，递归是如果实现的。听数据结构老师的一堂课，感觉有所收获，故记录下来。 正文 一般来说在可以用递归的地方,同样是可以用 for…"},"next":{"fields":{"slug":"/post/java链接MySQL"}},"previous":{"fields":{"slug":"/post/二叉树的中序非递归遍历"}}}],"pathPrefix":"tags/algorihm","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"totalCount":4,"tags":["wabpack","eslint","javascript","axios","api","react","babel","linix","app","algorihm","git","gogs","ruby","language","nginx","proxy","php","shell","cpp","language-feature","c","recursion","java","jsp","mysql","atom","markdown","nodejs","error"]}}}